#  -*- Mode: makefile; indent-tabs-mode: t -*-
#
#  This file is part of 0bt. For more info see COPYING.

# root directory
TOPDIR=$(shell pwd)

#
# Common build options
#
ARCH=$(shell uname -m)

ifeq ($(ARCH), x86_64)
        ARCH := x86
endif


# Flags that can be passed during build
DEBUG ?=
V ?=
DISK_IMAGE ?= disk.img
DISK_SIZE ?= 4G

#
# Build targets
#
DEFAULT = all
RUN = run
BUILD_INITRD = initrd
CLEAN = clean
CLEAN_DISK = clean_image
CLEAN_INITRD = clean_initrd
CLEAN_ALL = clean_all
HELP = help
TOOLS = tools
INSTALL = install
BUILD_IMAGE = image
FORMAT_FAT_IMAGE = format-fat-image
FORMAT_EXT2_IMAGE = format-ext2-image
BUILD_BOOTLOADER = build-boot
CREATE_DISK_PARTITIONS = create-disk-partitions

#
# filesystem related targets
#
USE_FAT_FS = 1

#
# Standard tools
#
RM = rm -rf
AS = as
LD = ld

# file system and disk utils
DD = dd
MKFS_VFAT=mkfs.vfat

#
# Generated files (mostly used for cleanups)
#
ISO = *.iso
IMAGE = *.img
BIN_FILES = *.bin
OBJECT_FILES = *.o
INITRD_FILES = $(TOPDIR)/initrd/sbin \
		$(TOPDIR)/initrd/bin/ \
		$(TOPDIR)/initrd/dev/ \
		$(TOPDIR)/initrd/etc/ \
		$(TOPDIR)/initrd/lib/ \
		$(TOPDIR)/initrd/proc/ \
		$(TOPDIR)/initrd/sys/ \
		$(TOPDIR)/initrd/initrd.img \
		$(TOPDIR)/initrd.img

#
# Common directories
#
SRC_DIR = src/
X86_64_DIR = $(SRC_DIR)/$(ARCH)

#
# Bootloader stages
#
STAGE0 = boot0_$(ARCH).bin
STAGE1 = boot1_$(ARCH).bin

#
# Common utilities
#
DEV_NULL = /dev/null
DEV_ZERO = /dev/zero
STDERR_TO_DEV_NULL = 2> $(DEV_NULL)
STDOUT_TO_DEV_NULL = 1> $(DEV_NULL)
STD_ERR_OUT_TO_DEV_NULL = >/dev/null 2>&1

#
# set verbosity
#
ifndef V
	QUIET_AS                = @echo '   ' AS $@;
	QUIET_LD                = @echo '   ' LD $@;
	QUIET_CC                = @echo '   ' CC $@;
	QUIET_CPP               = @echo '   ' CPP $@;
	QUIET_OBJS_CLEAN        = @echo '   ' RM $(OBJECT_FILES);
	QUIET_DISK_CLEAN	= @echo '   ' RM $(IMAGE);
	QUIET_ISO_CLEAN		= @echo '   ' RM $(ISO);
	QUIET_DISC_CREATE	= @echo '   ' DD $(DISK_IMAGE);
	QUIET_BIN_CLEAN         = @echo '   ' RM $(BIN_FILES);
	QUIET_INITRD_CLEAN	= @echo '   ' RM initrd
	MAKE_FLAGS = -s
else
	QUIET_AS=
	QUET_LD=
	QUIET_CC=
	QUET_CPP=
	QUIET_OBJS_CLEAN= 
	QUIET_DISK_CLEAN=
	QUIET_ISO_CLEAN=
	QUIET_DISC_CREATE=
	QUIET_INITRD_CLEAN=
	MAKE_FLAGS=
endif

#
# set CXX
#
ifndef CXX
	CXX = g++
endif

#
# set CC
#
ifndef CC
	CC = gcc
endif
