#
# Common build options
#
ARCH=x86_64

# Flags that can be passed during build
DEBUG ?=
V ?=
DISK_IMAGE ?= disk.img
DISK_SIZE ?= 4G

#
# Build targets
#
DEFAULT = all
CLEAN = clean
HELP = help
BUILD_IMAGE = image
BUILD_BOOTLOADER = build-boot

#
# Standard tools
#
RM = rm -rf
AS = as
LD = ld
CC = gcc

# file system and disk utils
DD = dd
MKFS_VFAT=mkfs.vfat

#
# Generated files (mostly used for cleanups)
#
ISO = *.iso
IMAGE = *.img
BIN_FILES = *.bin
OBJECT_FILES = *.o

#
# Common directories
#
SRC_DIR = src/
X86_64_DIR = $(SRC_DIR)/$(ARCH)

#
# Bootloader stages
#
STAGE0 = boot0_$(ARCH).bin

#
# Common utilities
#
DEV_NULL = /dev/null
DEV_ZERO = /dev/zero
TO_DEV_NULL = 2> $(DEV_NULL)

#
# set verbosity
#
ifndef V
	QUIET_AS                = @echo '   ' AS $@;
	QUIET_LD                = @echo '   ' LD $@;
	QUIET_OBJS_CLEAN        = @echo '   ' RM $(OBJECT_FILES);
	QUIET_DISK_CLEAN	= @echo '   ' RM $(IMAGE);
	QUIET_ISO_CLEAN		= @echo '   ' RM $(ISO);
	QUIET_DISC_CREATE     = @echo '   ' DD $(DISK_IMAGE);
	QUIET_BIN_CLEAN         = @echo '   ' RM $(BIN_FILES);
	QUIET_DISK_VFAT_CREATE	= @echo '   ' MKFS.VFAT $(DISK_IMAGE)
	MAKE_FLAGS = -s
else
	QUIET_AS=
	QUET_LD=
	QUIET_OBJS_CLEAN= 
	QUIET_DISK_CLEAN=
	QUIET_ISO_CLEAN=
	QUIET_DISC_CREATE=
	QUIET_DISC_VFAT_CREATE=
	MAKE_FLAGS=
endif
